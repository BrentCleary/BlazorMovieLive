@page "/movie/{id:int}"
@inject TMDBClient TMDB


@if(movieDetails is null)
{
	<p><em>Loading...</em></p>
}
else
{
	<PageTitle>@movieDetails.Title</PageTitle>
	<!--Page Banner -->
	<div class="hero-bg" style="@($"--bg-img: url(https://image.tmdb.org/t/p/original{movieDetails.BackdropPath})")">
		<div class="hero-container">
			<div class="container=xxl d-flex flex-column flex-md-row">
				<!-- Title Content Goes Here -->
				<div class="flex-grow-1 d-flex align-items-center justify-content-center justify-content-md-end">
					<div class="title-container text-center text-md-end">
						<h1 class="text-light">@movieDetails.Title</h1>
						<h2 class="text-light">@movieDetails.Tagline</h2>
					</div>
				</div>
			</div>

		</div>
	</div>


	<h1>@movieDetails.Title</h1>
	<p>@movieDetails.Overview</p>
}

<p>Movie Id is @Id</p>

@code {

	[Parameter]
	public int Id { get; set; }

	private MovieDetails? movieDetails;

	protected override async Task OnInitializedAsync()
	{
		movieDetails = await TMDB.GetMovieDetailsAsync(Id);
	}

}
